#!/bin/bash
#Script converts images to mp4 static videos
ffmpeg_alternative=ffmpeg

#echo "" > commands.bash;

input="$1";
if [ ! -s "$input" ];
then
    echo "First argument '$input' must be a input image file, but it is not "
    echo "Lets process all current directory"
    for i in *.*;
        do echo -e "\n$i: ";
        eval "$0 \"${i}\"";
    done;
    echo "";
    exit;
fi;

sleeptime="0.15";
function execute_comm {
    sleeptime="0.1";
    echo -e "\n\nExecute '$1'";
    sleep $sleeptime;
    echo "$1" >> commands.bash;
    sleep $sleeptime;
    echo "";
    eval "$1";
}

#Let's set CPU threads count
threads=$(grep -c ^processor /proc/cpuinfo);
#echo $threads;
threads=$((threads * 2 + 0));
echo $threads;
sleep 0.1;

i="$input";

format="mp4";
fps="1.5";
frames=21;
crf=45;
OUTDIR="$format-${fps}fps-${frames}frames-${crf}crf";
mkdir -p "$OUTDIR";
time ffmpeg -y -hide_banner -loglevel debug -r $fps -i "$i" -an -vf setsar=1:1,scale=w='trunc(min(3840\,iw)/2)*2':h='trunc(min(2160\,ih)/2)*2':force_original_aspect_ratio=decrease:flags=lanczos,setsar=1:1,pad=width='ceil(iw/2)*2':height='ceil(ih/2)*2',setsar=1:1,loop=loop=$frames:size=1:start=0,fps=$fps,mpdecimate,format=pix_fmts=yuv420p\|yuvj420p,fps=$fps \
-frames:v $frames -crf $crf -preset veryslow -profile:v main -vcodec h264 \
-x264-params min-keyint=31337:keyint_min=31337:keyint=31337:scenecut=31337:ref=1 -movflags faststart "$OUTDIR/${i%.*}.$format";

