#!/bin/bash
#kill yandex disk daemon if no response in X minutes
older_than_minutes=5
#How many seconds we can give to the daemon for first start
first_start_timeout_sec=1777
#How many seconds we can give to the daemon for start
start_timeout_sec=777
#How many seconds we can give to the daemon for give status message
status_timeout_sec=77
#Where to save logs
log_file_path="/home/i/bin/logs/ydisk.log"
#Where to save info about daemon deactivations
restart_log_file_path="/home/i/bin/logs/ydisk_kills.log"
#Where to save info about current status of the daemon
last_status_log_file_path="/home/i/bin/logs/ydisk_last_status.log"
#Directories to exclude from syncronisation
#exclude_dirs="--exclude-dirs=archive-2019,backups,archive-2019,media,tvorchestvo,VKinel.ru-all-photos";
#exclude_dirs="--exclude-dirs=media,VKinel.ru-all-photos,tvorchestvo";
#exclude_dirs="--exclude-dirs=media";
#If we find this message in daemon's status - we will kill it
daemon_is_not_running_message="Ошибка: демон не запущен";
#2If we find this message in daemon's status - we will kill it
daemon_auth_error="Ошибка авторизации";
#kill the daemon every X seconds of working
kill_after_seconds=7777

function kill_the_yd_daemon () {
    #function kills yandex disk daemon
    #while true; do sleep 7777; killall -s KILL yandex-disk; date +%Y-%m-%d-%H-%M-%S; done;
    echo "`date +%Y-%m-%d-%H-%M-%S`: Let's kill the yandex-disk-daemon!"  | tee -a "${log_file_path}"  | tee -a "${restart_log_file_path}"; 
    timeout --kill-after=9 10 yandex-disk stop | tee -a "${log_file_path}"; 
    for i in `seq 1 47`; do echo -n "."; sleep 0.2; killall --quiet --verbose yandex-disk; done;
    echo "";
    sleep 2;
    for i in `seq 1 53`; do echo -n "."; sleep 0.1; killall --quiet --verbose -s KILL yandex-disk; done;
}

function start_the_yd_daemon () {
    #function starts yandex disk daemon
    #$1 - timeout in seconds (how many seconds we can give to deemon to start)
    echo "`date +%Y-%m-%d-%H-%M-%S`: Let's start yandex-disk-daemon with timeout ${1} seconds \"${exclude_dirs}\"";
    timeout --kill-after=9 "${1}" yandex-disk start ${exclude_dirs} | tee -a "${log_file_path}"; 
    #echo "`date +%Y-%m-%d-%H-%M-%S`: Let's start yandex-disk-daemon with timeout ${first_start_timeout_sec} seconds ${exclude_dirs}";
    #timeout --kill-after=9 ${first_start_timeout_sec} yandex-disk start ${exclude_dirs} | tee -a "${log_file_path}"; 
}


#creadte directories to log file
DIR=$(dirname "${log_file_path}");
mkdir -pv ${DIR};
DIR=$(dirname "${restart_log_file_path}");
mkdir -pv ${DIR};

start_the_yd_daemon ${first_start_timeout_sec};
START_TIME=`date +%s`;

while true; do echo "";
    if [ `find "${log_file_path}" -mmin +${older_than_minutes}` ]
    then 
        echo "`date +%Y-%m-%d-%H-%M-%S`: Log-file older than ${older_than_minutes} minutes"  | tee -a "${log_file_path}";
       
        kill_the_yd_daemon;
        
        sleep 2;
        echo -e "\n\n\n\n\n\n\n\n\n" | tee -a "${log_file_path}"; 
        date +%Y-%m-%d-%H-%M-%S | tee -a "${log_file_path}"; 
        #echo "Let's start yandex-disk-daemon with timeout ${start_timeout_sec} seconds ${exclude_dirs}";
        #timeout --kill-after=9  ${start_timeout_sec} yandex-disk start ${exclude_dirs} | tee -a "${log_file_path}"; 
        start_the_yd_daemon "${start_timeout_sec}";
        START_TIME=`date +%s`;

        
        date +%Y-%m-%d-%H-%M-%S | tee -a "${log_file_path}"; 
        timeout --kill-after=9 ${status_timeout_sec} yandex-disk status | tee -a "${log_file_path}" | tee "${last_status_log_file_path}"; 
        date +%Y-%m-%d-%H-%M-%S | tee -a "${log_file_path}"; 

    else 
        echo "`date +%Y-%m-%d-%H-%M-%S`: Log-file NOT older than ${older_than_minutes} minutes ";
        #for i in `seq 1 10`; do echo -n "."; sleep 0.01; killall --older-than 4h --quiet --verbose -s KILL yandex-disk; done;
        echo "";
        stat  --printf="%y\n"  "${log_file_path}"
        
        #echo "Let's start yandex-daemon with timeout ${start_timeout_sec} seconds";
        #Let's kill process older than some hours
        #timeout ${start_timeout_sec} yandex-disk start | tee -a "${log_file_path}";         
        timeout --kill-after=9 ${status_timeout_sec} yandex-disk status | tee -a "${log_file_path}" | tee "${last_status_log_file_path}"; 

        #Let's kill yandex disk daemon if some error found in last status message
        #
        if grep "${daemon_is_not_running_message}" "${last_status_log_file_path}"; then
            echo "`date +%Y-%m-%d-%H-%M-%S`: Let's restart daemon because '"${daemon_is_not_running_message}"' message founded in last status logs.";
            kill_the_yd_daemon;
            start_the_yd_daemon "${start_timeout_sec}";
            START_TIME=`date +%s`;
        fi
        if grep "${daemon_auth_error}" "${last_status_log_file_path}"; then
            echo "`date +%Y-%m-%d-%H-%M-%S`: Let's restart daemon because '"${daemon_auth_error}"' message founded in last status logs.";
            kill_the_yd_daemon;
            start_the_yd_daemon "${start_timeout_sec}";
            START_TIME=`date +%s`;
        fi
        
    fi; 
    
END_TIME=`date +%s`;
#echo "Start time = ${START_TIME}, End time = ${END_TIME}";
TIME_DIFF=$((END_TIME-START_TIME));
if [[ "${kill_after_seconds}" -lt "${TIME_DIFF}" ]]; then
    echo "Lets kill daemon because ${kill_after_seconds} is less than ${TIME_DIFF}"
    kill_the_yd_daemon;
    start_the_yd_daemon "${start_timeout_sec}";
    START_TIME=`date +%s`;

    echo "`date +%Y-%m-%d-%H-%M-%S`: The yandex-disk-daemon killed because it was too old."  | tee -a "${log_file_path}"  | tee -a "${restart_log_file_path}"; 
else
    WE_KILL_IT_AFTER_SECONDS=$((kill_after_seconds-TIME_DIFF));
    echo "yandex disk daemon started ${TIME_DIFF} seconds ago. We will kill the daemon in ${WE_KILL_IT_AFTER_SECONDS} seconds.";
fi
    
sleep 60;
done;


#@reboot sleep 37 /home/i/bin/ydisk-killer >> /home/i/bin/logs/yandex-disk-working.log 2>&1
